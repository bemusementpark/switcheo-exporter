{"version":3,"sources":["serviceWorker.js","reducers/rootReducer.js","reducers/switcheo/switcheoReducer.js","reducers/switcheo/contractsReducer.js","actions/switcheo/actions.js","reducers/switcheo/tokensReducer.js","reducers/switcheo/networkReducer.js","reducers/switcheo/tickersReducer.js","reducers/layout/layoutReducer.js","reducers/layout/errorReducer.js","actions/layout/actions.js","reducers/layout/loadingReducer.js","reducers/address/addressReducer.js","reducers/address/combineAddressReducer.js","reducers/address/historyReducer.js","actions/address/actions.js","reducers/address/ordersReducer.js","store.js","actions/layout/errors/hideError.js","components/ErrorProvider/index.js","helpers/getAddressType.js","helpers/symbols.js","helpers/isAddressValid.js","actions/address/address/resetAddress.js","actions/address/history/fetchAddressHistory.js","components/AddressHistory/index.js","components/Footer/index.js","pages/form/index.js","actions/switcheo/contracts/fetchContracts.js","actions/switcheo/tokens/fetchTokens.js","actions/address/orders/fetchOrders.js","helpers/convertOrders.js","actions/layout/loading/unsetLoading.js","actions/address/history/addAddressToHistory.js","actions/address/history/removeAddressFromHistory.js","actions/address/address/setAddress.js","helpers/formatAddress.js","actions/layout/loading/setLoading.js","actions/switcheo/tickers/fetchTickers.js","actions/layout/errors/raiseError.js","components/Spinner/index.js","actions/switcheo/network/toggleNetwork.js","components/Drawer/index.js","config/theme.js","config/table.js","components/OrdersTable/index.js","pages/address/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","history","combineReducers","contracts","arguments","length","undefined","action","type","tokens","network","tickers","show","message","loading","initialState","address","addressHashed","addressType","orders","createHashHistory","store","createStore","router","connectRouter","switcheo","layout","compose","applyMiddleware","routerMiddleware","thunk","hideError","dispatch","ErrorProvider","react_default","a","createElement","Dialog_default","open","this","props","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","Typography_default","component","DialogActions_default","Button_default","onClick","color","variant","children","Component","connect","Object","objectSpread","bindActionCreators","getAddressType","validator","validate","isAddressValid","resetAddress","fetchAddressHistory","addrHistory","localStorage","getItem","JSON","parse","setItem","AddressHistory","_getPrototypeOf2","_this","classCallCheck","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onAddressClick","closeDialog","setState","renderButton","style","width","removeAll","removeItem","_this2","List_default","slice","map","index","ListItem_default","key","button","ListItemText_default","Footer","align","className","classes","links","Tooltip_default","title","IconButton_default","Web_default","Code_default","ghPages","Typography_Typography_default","href","target","src","alt","height","position","top","right","packageJson","name","version","withStyles","theme","paddingTop","HomePage","params","handleAddressChange","update","$set","isValid","loadTrades","event","preventDefault","push","document","main","CssBaseline_default","Paper_default","paper","form","onSubmit","FormControl_default","margin","required","fullWidth","InputLabel_default","htmlFor","Input_default","autoFocus","onChange","value","autoComplete","submit","disabled","components_AddressHistory","components_Footer","defineProperty","display","marginLeft","spacing","unit","marginRight","breakpoints","up","maxWidth","marginTop","flexDirection","alignItems","padding","addressHistory","errorDialog","backgroundColor","avatar","palette","secondary","fetchContracts","callback","getState","requestUrl","fetch","res","json","err","fetchTokens","fetchOrders","resetLoading","_getState$address$add","fetchOrdersFromContracts","values","convertedOrders","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","order","fills","makes","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","is_make","return","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","fams","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","fam","blockchain","toUpperCase","addressHash","contractHash","contract_hash","pair","side","created_at","price","filled_amount","want_amount","fee_amount","fee_asset_id","status","fill_amount","parsedDate","Date","orderDate","moment","format","wallet","getAddressFromScriptHash","contractVersion","find","market","replace","orderType","orderPrice","parseFloat","toFixed","splittedPair","split","towardTokenSymbol","decimals","amount","total","Math","pow","fee_symbol","feePaid","currentPrice","gains","symbol","hash","fee_token_precision","Number","_iterator4","convertOrders","fetchOrdersFromContractBulkwise","_ref","asyncToGenerator","regenerator_default","mark","_callee","limit","hasResults","beforeId","fetchedOrders","response","wrap","_context","prev","sent","toConsumableArray","abrupt","stop","_x","_x2","_x3","_ref2","_callee3","contractHashes","_context3","Promise","all","_ref3","_callee2","_context2","_x7","_x4","_x5","_x6","addAddressToHistory","newHistory","filter","addr","stringify","removeAddressFromHistory","currentHistory","setAddress","doFetchOrders","getScriptHashFromAddress","toLowerCase","formatAddress","raiseError","Spinner","CircularProgress_default","toggleNetwork","Header","navigateHome","Fragment","AppBar_default","appBar","Toolbar_default","core_IconButton_default","ArrowBack_default","Hidden_default","xsDown","noWrap","pageTitle","FormGroup_default","row","FormControlLabel_default","control","Switch_default","checked","label","content","withRouter","@global","body","common","white","flex","darkTheme","createMuiTheme","primary","green","typography","useNextVariants","darkTable","columns","options","selectableRows","print","responsive","textLabels","noMatch","OrdersTable","core_styles","dist_default","data","downloadOptions","filename","TradesPage","renderOrdersTable","components_Spinner","components_OrdersTable","Drawer","ReactDOM","render","es","lib","MuiThemeProvider_default","Switch","components_ErrorProvider","Route","exact","path","getElementById","URL","process","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.650fad2c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {combineReducers} from 'redux';\n\nimport {connectRouter} from 'connected-react-router';\n\nimport switcheo from './switcheo/switcheoReducer'\nimport layout from './layout/layoutReducer'\nimport address from './address/combineAddressReducer'\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    switcheo,\n    layout,\n    address,\n});\n","import {combineReducers} from 'redux';\n\nimport contracts from './contractsReducer';\nimport tokens from './tokensReducer';\nimport network from './networkReducer';\nimport tickers from './tickersReducer';\n\nexport default combineReducers({\n    contracts,\n    tokens,\n    network,\n    tickers\n});\n","import {SWITCHEO_FETCH_CONTRACTS} from \"../../actions/switcheo/actions\";\n\n/**\n * This reducer handles the contracts delivered by switcheo.network\n * @param contracts\n * @param action\n * @returns {contracts|{}}\n */\nexport default (contracts = {}, action) => {\n    switch (action.type) {\n        case SWITCHEO_FETCH_CONTRACTS:\n            return action.contracts;\n        default:\n            return contracts\n    }\n}\n","export const SWITCHEO_FETCH_CONTRACTS = \"switcheo/fetch_contracts\";\nexport const SWITCHEO_FETCH_TOKENS = \"switcheo/fetch_tokens\";\nexport const SWITCHEO_TOGGLE_NETWORK = \"switcheo/toggle_network\";\nexport const SWITCHEO_FETCH_TICKERS = \"switcheo/fetch_tickers\";\n","import {SWITCHEO_FETCH_TOKENS} from \"../../actions/switcheo/actions\";\n\n/**\n * This reducer handles the tokens delivered by switcheo.network\n * @param tokens\n * @param action\n * @returns {tokens|{}}\n */\nexport default (tokens = {}, action) => {\n    switch (action.type) {\n        case SWITCHEO_FETCH_TOKENS:\n            return action.tokens;\n        default:\n            return tokens;\n    }\n}\n","import {SWITCHEO_TOGGLE_NETWORK} from \"../../actions/switcheo/actions\";\n\nexport const mainNet = \"api\";\nexport const testNet = \"test-api\";\n\n/**\n * This reducer handles the current network\n * @param network\n * @param action\n * @returns {string}\n */\nexport default (network = mainNet, action) => {\n    switch (action.type) {\n        case SWITCHEO_TOGGLE_NETWORK:\n            return network === mainNet ? testNet : mainNet;\n        default:\n            return network\n    }\n}\n","import {SWITCHEO_FETCH_TICKERS} from \"../../actions/switcheo/actions\";\n\n/**\n * This reducer handles the tickers delivered by api.switcheo.exchange\n * @param tickers\n * @param action\n */\nexport default (tickers = {}, action) => {\n    switch (action.type) {\n        case SWITCHEO_FETCH_TICKERS:\n            return action.tickers;\n        default:\n            return tickers;\n    }\n}","import {combineReducers} from 'redux'\n\nimport error from './errorReducer'\nimport loading from './loadingReducer'\n\nexport default combineReducers({\n    error,\n    loading\n});\n","import {LAYOUT_HIDE_ERROR, LAYOUT_RAISE_ERROR} from \"../../actions/layout/actions\";\n\n/**\n * This reducer handles the error popup\n * @param error\n * @param action\n * @returns {*}\n */\nexport default (error = {show: false, message: ''}, action) => {\n    switch (action.type) {\n        case LAYOUT_RAISE_ERROR:\n            return {\n                show: true,\n                message: action.message || 'missing error message in reducer'\n            };\n        case LAYOUT_HIDE_ERROR:\n            return {\n                show: false,\n                message: ''\n            };\n        default:\n            return error\n    }\n}\n","export const LAYOUT_RAISE_ERROR = \"layout/raise_error\";\nexport const LAYOUT_HIDE_ERROR = 'layout/hide_error';\nexport const LAYOUT_SET_LOADING = 'layout/set_loading';\nexport const LAYOUT_UNSET_LOADING = 'layout/unset_loading';\n","import {LAYOUT_SET_LOADING, LAYOUT_UNSET_LOADING} from '../../actions/layout/actions'\n\n/**\n * This state handles the current isLoading state\n * @param loading\n * @param action\n * @returns {boolean}\n */\nexport default (loading = false, action) => {\n    switch (action.type) {\n        case LAYOUT_SET_LOADING:\n            return true;\n        case LAYOUT_UNSET_LOADING:\n            return false;\n        default:\n            return loading;\n    }\n}\n","import {ADDRESS_RESET, ADDRESS_SET} from '../../actions/address/actions'\n\nconst initialState = {\n    address: '',\n    addressHashed: '',\n    addressType: ''\n};\n\n/**\n * This reducer handles the current address\n * @param address\n * @param action\n * @returns {*}\n */\nexport default (address = initialState, action) => {\n    switch (action.type) {\n        case ADDRESS_SET:\n            return {\n                address: action.address,\n                addressHashed: action.addressHashed,\n                addressType: action.addressType,\n            };\n        case ADDRESS_RESET:\n            return initialState;\n        default:\n            return address\n    }\n}\n","import {combineReducers} from 'redux'\n\nimport address from './addressReducer'\nimport history from './historyReducer'\nimport orders from './ordersReducer'\n\nexport default combineReducers({\n    history,\n    orders,\n    address,\n})","import {\n    ADDRESS_ADD_TO_HISTORY,\n    ADDRESS_FETCH_HISTORY,\n    ADDRESS_REMOVE_FROM_HISTORY\n} from \"../../actions/address/actions\";\n\nexport default (history = [], action) => {\n    switch (action.type) {\n        case ADDRESS_FETCH_HISTORY || ADDRESS_REMOVE_FROM_HISTORY || ADDRESS_ADD_TO_HISTORY:\n            return action.history;\n        default:\n            return history;\n    }\n}","export const ADDRESS_SET = \"address/set\";\nexport const ADDRESS_RESET = \"address/reset\";\nexport const ADDRESS_FETCH_ORDERS = \"address/fetch_orders\";\n\nexport const ADDRESS_FETCH_HISTORY = \"address/fetch_history\";\nexport const ADDRESS_REMOVE_FROM_HISTORY = \"address/remove_from_history\";\nexport const ADDRESS_ADD_TO_HISTORY = \"address/add_to_history\";","import {ADDRESS_FETCH_ORDERS} from \"../../actions/address/actions\";\n\nexport default (orders = [], action) => {\n    switch (action.type) {\n        case ADDRESS_FETCH_ORDERS:\n            return action.orders;\n        default:\n            return orders;\n    }\n}","import {createHashHistory} from 'history';\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {routerMiddleware} from 'connected-react-router';\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nexport const history = createHashHistory();\nexport const store = createStore(\n    rootReducer(history),\n    compose(\n        applyMiddleware(\n            routerMiddleware(history),\n            thunk\n        )\n    ),\n);\n","import {LAYOUT_HIDE_ERROR} from \"../actions\";\n\n/**\n * Hides the displayed error message\n * @returns {function(*): *}\n */\nexport const hideError = () => dispatch => {\n    return dispatch({\n        type: LAYOUT_HIDE_ERROR,\n    })\n};\n","import React, {Component} from 'react'\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {hideError} from \"../../actions/layout/errors/hideError\";\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography'\n\nclass ErrorProvider extends Component {\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.props.layout.error.show} onClose={this.props.hideError}\n                        aria-labelledby={\"error-dialog\"}>\n                    <DialogTitle id={\"error-dialog\"}>Error</DialogTitle>\n                    <DialogContent>\n                        <Typography component={\"b\"}>{this.props.layout.error.message}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.props.hideError} color={\"primary\"} variant={\"outlined\"}>Close</Button>\n                    </DialogActions>\n                </Dialog>\n                {this.props.children}\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    ...state\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    hideError\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorProvider);\n","import validator from 'wallet-address-validator'\nimport * as symbols from './symbols'\n\n/**\n * returns the symbol of the given address type\n * address symbols are stored in helpers/symbols\n * @param address {string}\n */\nexport const getAddressType = (address = '') => {\n    if (validator.validate(address, symbols.NEO)) {\n        return symbols.NEO\n    }\n    if (validator.validate(address, symbols.ETH)) {\n        return symbols.ETH\n    }\n    if (validator.validate(address, symbols.QTUM)) {\n        return symbols.QTUM\n    }\n    return ''\n};\n","export const NEO = \"NEO\";\nexport const ETH = \"ETH\";\nexport const QTUM = \"QTUM\";\n","import {getAddressType} from \"./getAddressType\";\n\n/**\n * Checks if the given Address is valid\n * @param address {string}\n * @returns {boolean}\n */\nexport const isAddressValid = (address = '') => {\n    return getAddressType(address) !== ''\n};\n","import {ADDRESS_RESET} from \"../actions\";\n\n/**\n * Resets the Address state\n * @returns {function(*): *}\n */\nexport const resetAddress = () => dispatch => {\n    return dispatch({\n        type: ADDRESS_RESET,\n    })\n};\n","import {ADDRESS_FETCH_HISTORY} from \"../actions\";\n\n/**\n * Fetches the Address History\n * @returns {Function}\n */\nexport const fetchAddressHistory = () => dispatch => {\n\n    let addrHistory = localStorage.getItem(\"address/history\");\n\n    if (addrHistory) {\n        addrHistory = JSON.parse(addrHistory);\n    } else {\n        localStorage.setItem(\"address/history\", \"[]\");\n        addrHistory = [];\n    }\n    dispatch({\n        type: ADDRESS_FETCH_HISTORY,\n        history: addrHistory\n    });\n};","import React, {Component} from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport {fetchAddressHistory} from \"../../actions/address/history/fetchAddressHistory\";\n\nimport {bindActionCreators} from \"redux\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass AddressHistory extends Component {\n\n    constructor(...props) {\n        super(...props);\n        this.state = {open: false}\n    }\n\n    onAddressClick = (address) => {\n        this.closeDialog();\n        if (this.props.onAddressClick) {\n            this.props.onAddressClick(address)\n        }\n    };\n\n    closeDialog = () => {\n        this.setState({\n            open: false\n        })\n    };\n\n    renderButton = () => {\n        if (this.props.address.history.length) {\n            return <Button style={{width: '100%'}} color={\"primary\"} onClick={() => {\n                this.setState({open: true})\n            }}>Show History</Button>\n        }\n    };\n\n    removeAll = () => {\n        localStorage.removeItem(\"address/history\");\n        this.props.fetchAddressHistory();\n        this.closeDialog();\n    };\n\n    render() {\n        return (\n            <div>\n                {this.renderButton()}\n                <Dialog open={this.state.open} onClose={this.closeDialog} aria-labelledby={\"addr-history-title\"}>\n                    <DialogTitle id={\"addr-history-title\"}>Address History</DialogTitle>\n                    <DialogContent>\n                        <List>\n                            {this.props.address.history.slice(0, 5).map((address, index) => {\n                                return (\n                                    <ListItem key={index} button onClick={() => {\n                                        this.onAddressClick(address)\n                                    }}>\n                                        <ListItemText>{address}</ListItemText>\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.removeAll}>Delete History</Button>\n                        <Button onClick={this.closeDialog} color={\"primary\"} variant={\"outlined\"}>Close</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n        )\n    }\n\n    /*\n    render() {\n        if(this.props.address.history.length) {\n            return (\n                <Paper>\n                    <List>\n                        {this.props.address.history.map((address, index) => {\n                            return (\n                                <ListItem button onClick={() => {this.onAddressClick(address)}} key={index}>\n                                    <Hidden only={[\"xs\"]}>\n                                        <ListItemText primary={address} />\n                                    </Hidden>\n                                    <Hidden only={[\"sm\", \"md\", \"lg\", \"xl\"]}>\n                                        <ListItemText primary={`${address.slice(0, 20)}...`} />\n                                    </Hidden>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </Paper>\n            )\n        } else {\n            return null\n        }\n    }*/\n}\n\nconst mapStateToProps = state => ({\n    ...state\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchAddressHistory\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddressHistory);","import React, {Component} from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport WebIcon from \"@material-ui/icons/Web\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport packageJson from '../../../package.json'\n\nconst styles = theme => ({\n    links: {\n        paddingTop: 10\n    },\n    ghPages: {\n        paddingTop: 20\n    }\n});\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <div>\n                <div align=\"center\" className={this.props.classes.links}>\n                    <Tooltip title=\"Go to switcheo.exchange\">\n                        <IconButton onClick={() => {\n                            window.open(\"https://switcheo.exchange/\", \"_blank\")\n                        }}>\n                            <WebIcon/>\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Open github project\">\n                        <IconButton onClick={() => {\n                            window.open(\"https://github.com/benammann/switcheo-exporter\", \"_blank\")\n                        }}>\n                            <CodeIcon/>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n                <div align=\"center\" className={this.props.classes.ghPages}>\n                    <Typography>Hosted at</Typography>\n                    <a href={\"https://pages.github.com/\"} target={\"_blank\"}>\n                        <img src={\"./gh_pages.svg\"} alt=\"github pages\" style={{\n                            width: '30%',\n                            height: 'auto'\n                        }}/></a>\n                </div>\n                <div align=\"center\" className={this.props.classes.ghPages}>\n                    <Typography style={{position: 'absolute', top: 5, right: 5, color: 'gray'}}>{packageJson.name} v{packageJson.version}</Typography>\n                </div>\n            </div>\n        )\n    }\n}\n\nFooter.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Footer);\n","import React, {Component} from 'react';\n\nimport update from 'immutability-helper'\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport {isAddressValid} from \"../../helpers/isAddressValid\";\nimport {resetAddress} from \"../../actions/address/address/resetAddress\";\n\nimport {fetchAddressHistory} from \"../../actions/address/history/fetchAddressHistory\";\n\nimport AddressHistory from '../../components/AddressHistory'\nimport Footer from '../../components/Footer'\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: '100%',\n            maxWidth: '400px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    addressHistory: {\n        marginTop: theme.spacing.unit * 8,\n    },\n    errorDialog: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n        backgroundColor: 'red'\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    }\n});\n\nclass HomePage extends Component {\n\n    constructor(...params) {\n        super(...params);\n        this.state = {\n            address: '',\n            isValid: false,\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchAddressHistory();\n        this.props.resetAddress();\n        document.title = \"Switcheo Exporter\";\n    }\n\n    /**\n     * Updates the state's address\n     * @param address\n     */\n    handleAddressChange = (address) => {\n        this.setState(update(this.state, {\n            address: {\n                $set: address\n            },\n            isValid: {\n                $set: isAddressValid(address)\n            }\n        }));\n    };\n\n    /**\n     * Navigates to #/address/:address in case the given address is valid\n     */\n    loadTrades = (event) => {\n        event.preventDefault();\n        if (this.state.isValid) {\n            this.props.history.push(`/address/${this.state.address}`)\n        }\n    };\n\n    render() {\n        return (\n            <main className={this.props.classes.main}>\n                <CssBaseline/>\n                <Paper className={this.props.classes.paper}>\n                    <img src={\"./switcheonetwork_logo.svg\"} alt={\"Switcheo Network Logo\"}/>\n                    <Typography component=\"h1\" variant=\"h6\">\n                        Trades Exporter\n                    </Typography>\n                    <div className={this.props.classes.form}>\n                        <form onSubmit={this.loadTrades}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"public_address\">Public Address</InputLabel>\n                                <Input id=\"public_address\" name=\"public_address\" autoFocus\n                                       onChange={event => this.handleAddressChange(event.target.value)}\n                                       value={this.state.address} autoComplete={\"off\"}/>\n                            </FormControl>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={this.props.classes.submit}\n                                disabled={!this.state.isValid}\n                            >\n                                Load Trades\n                            </Button>\n                        </form>\n                    </div>\n                </Paper>\n                <div className={this.props.classes.form}>\n                    <AddressHistory onAddressClick={this.handleAddressChange}/>\n                </div>\n                <Footer/>\n            </main>\n        );\n    }\n}\n\nHomePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    ...state\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    resetAddress,\n    fetchAddressHistory\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(HomePage));\n","import {SWITCHEO_FETCH_CONTRACTS} from '../actions'\nimport {LAYOUT_RAISE_ERROR} from \"../../layout/actions\";\n\n/**\n * fetches all contracts from /v2/exchange/contracts\n * @returns {function(*, *): *}\n */\nexport const fetchContracts = (callback) => (dispatch, getState) => {\n\n    const requestUrl = `https://${getState().switcheo.network}.switcheo.network/v2/exchange/contracts`;\n\n    fetch(requestUrl)\n        .then(res => res.json())\n        .then((contracts) => {\n            dispatch({\n                type: SWITCHEO_FETCH_CONTRACTS,\n                contracts,\n            });\n            if (callback) {\n                return callback()\n            }\n        })\n        .catch((err) => {\n            dispatch({\n                type: LAYOUT_RAISE_ERROR,\n                message: err.message,\n            })\n        });\n\n};\n","import {SWITCHEO_FETCH_TOKENS} from '../actions'\nimport {LAYOUT_RAISE_ERROR} from '../../layout/actions'\n\n/**\n * fetches all tokens from /api/v2/exchange/tokens\n * @returns {function(*, *): *}\n */\nexport const fetchTokens = (callback) => (dispatch, getState) => {\n\n    const requestUrl = `https://${getState().switcheo.network}.switcheo.network/v2/exchange/tokens`;\n\n    fetch(requestUrl)\n        .then(res => res.json())\n        .then((tokens) => {\n            dispatch({\n                type: SWITCHEO_FETCH_TOKENS,\n                tokens,\n            });\n            if (callback) {\n                return callback()\n            }\n        })\n        .catch((err) => {\n            dispatch({\n                type: LAYOUT_RAISE_ERROR,\n                message: err.message,\n            })\n        });\n\n};\n","import {ADDRESS_FETCH_ORDERS} from \"../actions\";\nimport {LAYOUT_RAISE_ERROR} from \"../../layout/actions\";\n\nimport {history} from \"../../../store\";\n\nimport {unsetLoading} from \"../../layout/loading/unsetLoading\";\n\nimport {convertOrders} from \"../../../helpers/convertOrders\";\n\nexport const fetchOrders = (resetLoading = false) => (dispatch, getState) => {\n\n    const {addressHashed, addressType} = getState().address.address;\n\n    if (addressHashed && addressType) {\n\n        const contracts = getState().switcheo.contracts[addressType];\n        const network = getState().switcheo.network;\n\n        if (contracts) {\n\n            fetchOrdersFromContracts(addressHashed, Object.values(contracts), network)\n                .then((orders) => {\n\n                    //merge orders from multiple contracts\n                    orders = [].concat.apply([], orders);\n                    orders = convertOrders(orders, getState().switcheo.tokens, getState().switcheo.contracts, getState().switcheo.tickers);\n\n                    dispatch({\n                        type: ADDRESS_FETCH_ORDERS,\n                        orders\n                    });\n\n                    if (resetLoading) {\n                        dispatch(unsetLoading())\n                    }\n\n                })\n                .catch((err) => {\n                    console.log(err);\n                    dispatch({\n                        type: LAYOUT_RAISE_ERROR,\n                        message: `Could not fetch orders: ${err.message}`\n                    });\n                    if (resetLoading) {\n                        dispatch(unsetLoading())\n                    }\n                    history.push(\"/\")\n                })\n\n        } else {\n\n            dispatch({\n                type: LAYOUT_RAISE_ERROR,\n                message: `Could not fetch orders: No contracts available for ${addressType}`\n            });\n            if (resetLoading) {\n                dispatch(unsetLoading())\n            }\n            history.push(\"/\")\n\n        }\n\n    } else {\n        dispatch({\n            type: LAYOUT_RAISE_ERROR,\n            message: 'Could not fetch orders: No address is given'\n        });\n        if (resetLoading) {\n            dispatch(unsetLoading())\n        }\n        history.push(\"/\")\n    }\n};\n\n/**\n * Fetches orders made by address from a single contract bulkwise\n * @param addressHashed\n * @param contractHash\n * @param network\n * @returns {Promise<Array>}\n */\nconst fetchOrdersFromContractBulkwise = async (addressHashed, contractHash, network) => {\n\n    const limit = 200;\n\n    let hasResults = true;\n    let beforeId = \"\";\n\n    let fetchedOrders = [];\n\n    while(hasResults) {\n        let requestUrl = `https://${network}.switcheo.network/v2/orders?address=${addressHashed}&contract_hash=${contractHash}&limit=${limit}`;\n        if(beforeId) {\n            requestUrl += `&before_id=${beforeId}`\n        }\n\n        const response = await fetch(requestUrl).then(res => res.json());\n\n        if(response.length) {\n            fetchedOrders = [...fetchedOrders, ...response];\n            if(response.length === limit) {\n                beforeId = response[response.length-1].id;\n            } else {\n                return fetchedOrders\n            }\n        } else {\n            return fetchedOrders\n        }\n    }\n\n};\n\n/**\n * Fetches orders from the given contract hashes\n * @param addressHashed\n * @param contractHashes\n * @param network\n * @returns {Promise<any[]>}\n */\nconst fetchOrdersFromContracts = async (addressHashed, contractHashes, network) => {\n    return Promise.all(contractHashes.map((async (contractHash) => {\n        /*await fetchOrdersFromContract(addressHashed, contractHash, network)\n            .then((orders) => {\n               if(orders) {\n                   return orders\n               }\n            });*/\n\n        return await fetchOrdersFromContractBulkwise(addressHashed, contractHash, network)\n    })))\n};\n","import * as symbols from './symbols'\nimport {wallet} from '@cityofzion/neon-js'\nimport moment from 'moment'\n\n/**\n * Converts orders to a readable format\n * @param orders\n * @param tokens\n * @param contracts\n * @param tickers\n * @returns {Array}\n */\nexport const convertOrders = (orders, tokens, contracts, tickers) => {\n    let convertedOrders = [];\n\n    for (const order of orders) {\n        //fam = \"Fills and Makes\"\n        let fills = order.fills;\n        let makes = order.makes;\n\n        for (const index of fills.keys()) {\n            fills[index].is_make = false;\n        }\n\n        for (const index of makes.keys()) {\n            makes[index].is_make = true;\n        }\n\n        const fams = [].concat.apply([], [fills, makes]);\n\n        //fam = \"Fill and Make\"\n        for (const fam of fams) {\n\n            if (!order.blockchain) {\n                continue\n            }\n\n            const blockchain = order.blockchain.toUpperCase();\n\n            if (blockchain === symbols.NEO || blockchain === symbols.ETH || blockchain === symbols.QTUM) {\n\n                const addressHash = order.address;\n                const contractHash = order.contract_hash;\n                const {pair, side} = order;\n                const {created_at, price, filled_amount, want_amount, fee_amount, fee_asset_id, status} = fam;\n                let {fill_amount} = fam;\n\n                if(!fill_amount) {\n                    fill_amount = filled_amount;\n                }\n\n                //Parse the orderDate\n                const parsedDate = new Date(Date.parse(created_at));\n\n                const orderDate = moment(parsedDate).format(\"YYYY-MM-DD HH:mm:ss\");\n\n                //Format the contract hash to a readable address\n                //TODO: Implement check for QTUM when switcheo implements it\n                //ETH is fine\n                const address = blockchain === symbols.NEO ? wallet.getAddressFromScriptHash(addressHash) : addressHash;\n\n                //Detect the contract version\n                const contractVersion = Object.keys(contracts[blockchain]).find(key => contracts[blockchain][key] === contractHash);\n\n                //Reformat the pair\n                const market = pair.replace(\"_\", \"/\");\n\n                //Upper case the orderType\n                const orderType = side.toUpperCase();\n\n                //Parse order price\n                const orderPrice = parseFloat(price).toFixed(8);\n\n                // Split pair\n                const splittedPair = pair.split(\"_\");\n\n                /**\n                 * Format given amount back to original amount\n                 */\n\n                const towardTokenSymbol = splittedPair[0];\n                const towardToken = tokens[towardTokenSymbol];\n                // use 8 as default precision in case the token is not listed anymore\n                const decimals = towardToken === undefined ? 8 : tokens[splittedPair[0].toUpperCase()].decimals;\n                //const amount = parseFloat(side === \"BUY\" ? fill_amount : want_amount) / Math.pow(10, decimals);\n\n                let amount = 0.0;\n                if(status === \"cancelled\") {\n                    /**\n                     * Since order has been cancelled, the fill amount is undefined\n                     * We must calculate the token amount then\n                     */\n                    const total = amount = parseFloat(want_amount) / Math.pow(10, decimals);\n                    amount = total / price;\n                } else {\n                    /**\n                     * Order has been filled\n                     * -> just parse the fill amount\n                     */\n                    amount = parseFloat(fill_amount) / Math.pow(10, decimals);\n                    if(side === \"buy\") {\n                        amount = amount / price;\n                    }\n                }\n\n                let fee_symbol = '-';\n                let feePaid = 0.0;\n\n                //detect current price\n                const currentPrice = tickers && tickers[splittedPair[0]] && tickers[splittedPair[0]][splittedPair[1]] ? tickers[splittedPair[0]][splittedPair[1]] : 'Not Listed';\n\n                //calculate gains\n                let gains = currentPrice !== 'Not Listed' ? (((parseFloat(currentPrice).toFixed(8) / orderPrice) * 100 - 100)).toFixed(2) : '--,--';\n\n                if (orderType === 'SELL' && gains > 0) {\n                    gains = gains * -1;\n                }\n\n                gains = `${gains}%`;\n                /**\n                 * Makes are free\n                 */\n                if (!fam.is_make) {\n                    fee_symbol = Object.keys(tokens).find(symbol => tokens[symbol].hash === fee_asset_id);\n                    if (fee_symbol) {\n                        const fee_token_precision = tokens[fee_symbol].decimals;\n                        feePaid = parseFloat(fee_amount) / Math.pow(10, fee_token_precision);\n                    } else {\n                        /**\n                         * Use toward token as fee symbol\n                         * and 8 as default precision\n                         */\n                        fee_symbol = towardTokenSymbol;\n                        feePaid = parseFloat(fee_amount) / Math.pow(10, 8);\n                    }\n\n                }\n\n                // Calculate total amount\n                let total = Number(parseFloat(orderPrice * amount)).toFixed(8);\n\n                if(!amount && amount !== 0.0 && status === \"failed\") {\n                    amount = 0.0;\n                    total = 0.0;\n                }\n\n                convertedOrders.push([\n                    orderDate,\n                    address,\n                    blockchain,\n                    contractVersion,\n                    market,\n                    orderType,\n                    amount,\n                    orderPrice,\n                    currentPrice,\n                    gains,\n                    fee_symbol,\n                    feePaid,\n                    total,\n                    status\n                ]);\n\n            } else {\n                //invalid blockchain type\n            }\n\n        }\n\n    }\n\n    return convertedOrders;\n};\n","import {LAYOUT_UNSET_LOADING} from \"../actions\";\n\n/**\n * Sets the global layout state as not loading\n * @returns {function(*): *}\n */\nexport const unsetLoading = () => dispatch => {\n    return dispatch({\n        type: LAYOUT_UNSET_LOADING\n    })\n};\n","import {ADDRESS_ADD_TO_HISTORY} from \"../actions\";\nimport {removeAddressFromHistory} from \"./removeAddressFromHistory\";\n\n/**\n * Adds $address to the address History\n * @param address\n * @returns {Function}\n */\nexport const addAddressToHistory = (address = '') => dispatch => {\n    dispatch(removeAddressFromHistory(address));\n\n    let currentHistory = localStorage.getItem(\"address/history\");\n    if (currentHistory) {\n        currentHistory = JSON.parse(currentHistory)\n    } else {\n        currentHistory = [];\n    }\n\n    let newHistory = [address, ...currentHistory];\n    localStorage.setItem(\"address/history\", JSON.stringify(newHistory));\n    dispatch({\n        type: ADDRESS_ADD_TO_HISTORY,\n        history: newHistory\n    })\n};","import {ADDRESS_REMOVE_FROM_HISTORY} from \"../actions\";\n\n/**\n * Removes $address from address history\n * @param address\n * @returns {Function}\n */\nexport const removeAddressFromHistory = (address) => dispatch => {\n\n    let currentHistory = localStorage.getItem(\"address/history\");\n    if (currentHistory) {\n        let newHistory = JSON.parse(localStorage.getItem(\"address/history\")).filter(addr => addr !== address);\n        localStorage.setItem(\"address/history\", JSON.stringify(newHistory));\n\n        dispatch({\n            type: ADDRESS_REMOVE_FROM_HISTORY,\n            history: newHistory\n        });\n    }\n};","import {ADDRESS_SET} from \"../actions\";\nimport {LAYOUT_RAISE_ERROR} from \"../../layout/actions\";\n\nimport {getAddressType} from \"../../../helpers/getAddressType\";\nimport {formatAddress} from \"../../../helpers/formatAddress\";\nimport {isAddressValid} from \"../../../helpers/isAddressValid\";\n\nimport {history} from \"../../../store\";\n\nimport {fetchOrders} from \"../orders/fetchOrders\";\n\nimport {fetchContracts} from \"../../switcheo/contracts/fetchContracts\";\nimport {fetchTokens} from \"../../switcheo/tokens/fetchTokens\";\n\nimport {fetchTickers} from \"../../switcheo/tickers/fetchTickers\";\n\nimport {setLoading} from \"../../layout/loading/setLoading\";\n\nimport {addAddressToHistory} from \"../history/addAddressToHistory\";\n\n\n/**\n * Sets the address state\n * @param address\n * @param doFetchOrders\n * @returns {function(*): *}\n */\nexport const setAddress = (address, doFetchOrders = false) => dispatch => {\n\n    if (isAddressValid(address)) {\n        dispatch({\n            type: ADDRESS_SET,\n            address,\n            addressHashed: formatAddress(address),\n            addressType: getAddressType(address),\n        });\n\n        if (doFetchOrders) {\n            dispatch(setLoading());\n            dispatch(fetchContracts(() => {\n                dispatch(fetchTokens(() => {\n                    dispatch(fetchTickers(() => {\n                        dispatch(addAddressToHistory(address));\n                        dispatch(fetchOrders(true));\n                    }));\n                }));\n            }));\n        }\n    } else {\n        dispatch({\n            type: LAYOUT_RAISE_ERROR,\n            message: `Please enter a valid NEO, ETH or QTUM address`,\n        });\n        history.push(\"/\");\n    }\n};\n","import * as symbols from './symbols'\nimport {getAddressType} from \"./getAddressType\";\nimport {wallet} from '@cityofzion/neon-js'\n\n/**\n * formatAddress formats an address to a compatible format depending on the given blockchain\n * @param address\n * @returns {string}\n */\nexport const formatAddress = (address = '') => {\n\n    const addressType = getAddressType(address);\n\n    if (addressType === symbols.NEO) {\n        /**\n         * For NEO, an address refers to the RIPEMD160 hash of the the user's ECDSA public key.\n         */\n        return wallet.getScriptHashFromAddress(address);\n    } else if (addressType === symbols.QTUM) {\n        /**\n         * TODO: implement when qtum has been released\n         */\n        return address.toLowerCase();\n    } else if (addressType === symbols.ETH) {\n        /**\n         * For Ethereum, an addresses refers to the Keccak hash of the right-most 160-bits of the user's ECDSA public key, as specified in the Ethereum Yellow Paper.\n         * Ethereum addresses are sometimes displayed with uppercase letters for verification purposes. When submitting addresses through the Switcheo API however, the address should always be fully lowercased.\n         */\n        return address.toLowerCase();\n    } else {\n        return address.toLowerCase();\n    }\n};\n","import {LAYOUT_SET_LOADING} from \"../actions\";\n\n/**\n * Sets the global layout state as loading\n * @returns {function(*): *}\n */\nexport const setLoading = () => dispatch => {\n    return dispatch({\n        type: LAYOUT_SET_LOADING\n    })\n};\n","import {SWITCHEO_FETCH_TICKERS} from \"../actions\";\nimport {LAYOUT_RAISE_ERROR} from \"../../layout/actions\";\n\n/**\n * Fetches the last price ( tickers ) from /v2/tickers/last_price\n * @returns {Function}\n */\nexport const fetchTickers = (callback) => (dispatch, getState) => {\n\n    const requestUrl = `https://${getState().switcheo.network}.switcheo.network/v2/tickers/last_price`;\n\n    fetch(requestUrl)\n        .then(res => res.json())\n        .then((tickers) => {\n            dispatch({\n                type: SWITCHEO_FETCH_TICKERS,\n                tickers\n            });\n            if (callback) {\n                return callback()\n            }\n        })\n        .catch((err) => {\n            dispatch({\n                type: LAYOUT_RAISE_ERROR,\n                message: err.message\n            });\n            if (callback) {\n                return callback()\n            }\n        })\n\n};","import {LAYOUT_RAISE_ERROR} from '../actions'\n\n/**\n * Displays an error message\n * @param message {string}\n * @returns {function(*): *}\n */\nexport const raiseError = (message = '') => dispatch => {\n    return dispatch({\n        type: LAYOUT_RAISE_ERROR,\n        message,\n    })\n};\n","import React, {Component} from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Spinner extends Component {\n    render() {\n        return (\n            <div align=\"center\" style={{\n                padding: 100\n            }}>\n                <CircularProgress/>\n            </div>\n        )\n    }\n}\n\nexport default Spinner\n","import {SWITCHEO_TOGGLE_NETWORK} from \"../actions\";\n\nimport {fetchContracts} from '../contracts/fetchContracts'\nimport {fetchTokens} from '../tokens/fetchTokens'\n\nimport {setAddress} from \"../../address/address/setAddress\";\n\n/**\n * toggles the current network between test-api and prod-api\n * it also fetches tokens and contracts from the given network\n * @returns {function(*): *}\n */\nexport const toggleNetwork = () => (dispatch, getState) => {\n    dispatch(fetchContracts());\n    dispatch(fetchTokens());\n    dispatch({\n        type: SWITCHEO_TOGGLE_NETWORK,\n    });\n    if (getState().address.address.address) {\n        /**\n         * In case an address is set, its orders need to reload and rerender\n         */\n        dispatch(setAddress(getState().address.address.address, true));\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router'\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport {bindActionCreators} from \"redux\";\nimport connect from \"react-redux/es/connect/connect\";\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nimport {toggleNetwork} from \"../../actions/switcheo/network/toggleNetwork\";\nimport {mainNet} from \"../../reducers/switcheo/networkReducer\";\n\nconst styles = theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    appBar: {\n        position: 'relative',\n    },\n    pageTitle: {\n        flex: 1,\n    },\n    content: {\n        padding: 10\n    }\n});\n\nclass Header extends Component {\n\n    navigateHome = () => {\n        this.props.history.push(\"/\")\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <CssBaseline/>\n                <AppBar position=\"static\" color=\"default\" className={this.props.classes.appBar}>\n                    <Toolbar>\n                        <div>\n                            <IconButton onClick={this.navigateHome}>\n                                <ArrowBackIcon/>\n                            </IconButton>\n                        </div>\n                        <Hidden xsDown>\n                            <Typography variant=\"h6\" noWrap>\n                                {this.props.address.address.address}\n                            </Typography>\n                        </Hidden>\n                        <div className={this.props.classes.pageTitle}/>\n                        <FormGroup row>\n                            <FormControlLabel control={<Switch color={\"primary\"} onChange={this.props.toggleNetwork}\n                                                               disabled={this.props.layout.loading}\n                                                               checked={this.props.switcheo.network === mainNet ? true : false}/>}\n                                              label={this.props.switcheo.network === mainNet ? \"MainNet\" : \"TestNet\"}/>\n                        </FormGroup>\n\n                    </Toolbar>\n                </AppBar>\n                <div className={this.props.classes.content}>\n                    {this.props.children}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    ...state\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    toggleNetwork\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Header)));\n","import {createMuiTheme} from '@material-ui/core/styles';\n\nimport green from '@material-ui/core/colors/green'\n\nexport const darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: green\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nexport const darkTable = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n});\n","export const columns = [\n    {\n        name: \"Order Date\",\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"Address\",\n        options: {\n            display: 'false',\n            filter: false\n        }\n    },\n    {\n        name: \"Blockchain\",\n        options: {\n            display: 'false',\n            filter: false\n        }\n    },\n    {\n        name: \"Contract Version\",\n        options: {\n            display: 'false',\n        }\n    },\n    {\n        name: \"Market\"\n    },\n    {\n        name: \"Type\"\n    },\n    {\n        name: \"Amount\",\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"Order Price\",\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"Current Price\",\n        options: {\n            filter: false,\n        }\n    },\n    {\n        name: \"Gains\",\n        options: {\n            display: 'false',\n            filter: false,\n        }\n    },\n    {\n        name: \"Fee Token\",\n        options: {\n            display: 'false'\n        }\n    },\n    {\n        name: \"Fee Amount\",\n        options: {\n            display: 'false',\n            filter: false\n        }\n    },\n    {\n        name: \"Total\",\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: \"Status\"\n    }\n];\n\nexport const options = {\n    selectableRows: false,\n    print: false,\n    responsive: 'scroll',\n    textLabels: {\n        body: {\n            noMatch: \"Can't find any trades\",\n        }\n    }\n};\n","import React, {Component} from 'react'\nimport MUIDataTable from \"mui-datatables\";\nimport {MuiThemeProvider} from '@material-ui/core/styles'\nimport {darkTable} from \"../../config/theme\";\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {columns, options} from '../../config/table'\n\nclass OrdersTable extends Component {\n    render() {\n        return (\n            <MuiThemeProvider theme={darkTable}>\n                <MUIDataTable\n                    title={\"Trade History\"}\n                    data={this.props.address.orders || []}\n                    columns={columns}\n                    options={\n                        {\n                            ...options,\n                            downloadOptions: {\n                                filename: `switcheonetwork_${this.props.address.address.address.addressType}_${this.props.address.address.address}`\n                            }\n                        }\n                    }\n                />\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    ...state\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersTable)\n","import React, {Component} from 'react';\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {fetchContracts} from \"../../actions/switcheo/contracts/fetchContracts\";\nimport {fetchTokens} from \"../../actions/switcheo/tokens/fetchTokens\";\nimport {setAddress} from \"../../actions/address/address/setAddress\";\nimport {raiseError} from \"../../actions/layout/errors/raiseError\";\n\nimport {fetchOrders} from \"../../actions/address/orders/fetchOrders\";\n\nimport Spinner from '../../components/Spinner'\n\nimport Drawer from '../../components/Drawer'\nimport OrdersTable from '../../components/OrdersTable'\n\nclass TradesPage extends Component {\n\n    componentDidMount() {\n        const address = this.props.match.params.address;\n        this.props.setAddress(address, true);\n        document.title = `List of trades - ${address}`\n    }\n\n    renderOrdersTable = () => {\n        return !this.props.layout.loading ? <OrdersTable/> : <Spinner/>\n    };\n\n    render() {\n        return (\n            <Drawer>\n                {this.renderOrdersTable()}\n            </Drawer>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    ...state\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchContracts,\n    fetchTokens,\n    setAddress,\n    raiseError,\n    fetchOrders\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TradesPage);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport {Route, Switch} from 'react-router';\nimport {ConnectedRouter} from 'connected-react-router';\nimport {history, store} from './store';\n\nimport ErrorProvider from './components/ErrorProvider'\n\nimport HomePage from './pages/form'\nimport TradesPage from './pages/address'\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport {darkTheme} from './config/theme'\n\nReactDOM.render(<Provider store={store}>\n    <ConnectedRouter history={history}>\n        <MuiThemeProvider theme={darkTheme}>\n            <Switch>\n                <ErrorProvider>\n                    <Route exact path={\"/\"} component={HomePage}/>\n                    <Route path={\"/address/:address\"} component={TradesPage}/>\n                </ErrorProvider>\n            </Switch>\n        </MuiThemeProvider>\n    </ConnectedRouter>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}